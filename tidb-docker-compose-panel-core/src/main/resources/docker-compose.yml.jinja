version: '2.1'

services:
{% for pd in pds %}
  {{ pd.name }}:
    image: pingcap/pd:{{ pd.version }}
    ports:
      - "2379"
    volumes:
      - ./config/pd.toml:/pd.toml:ro
      - ./data:/data
      - ./logs:/logs
    command:
      - --name={{ pd.name }}
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://{{ pd.name }}:2379
      - --advertise-peer-urls=http://{{ pd.name }}:2380
      - --initial-cluster={% for the_pd in pds %}{{ the_pd.name }}=http://{{ the_pd.name }}:2380,{% endfor %}
      - --data-dir=/data/{{ pd.name }}
      - --config=/pd.toml
      - --log-file=/logs/{{ pd.name }}.log
    restart: on-failure
{% endfor %}
{% for tikv in tikvs %}
  {{ tikv.name }}:
    image: pingcap/tikv:{{ tikv.version }}
    volumes:
      - ./config/tikv.toml:/tikv.toml:ro
      - ./data:/data
      - ./logs:/logs
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr={{ tikv.name }}:20160
      - --data-dir=/data/{{ tikv.name }}
      - --pd={% for pd in pds %}{{ pd.name }}:2379,{% endfor %}
      - --config=/tikv.toml
      - --log-file=/logs/{{ tikv.name }}.log
    depends_on:
{% for pd in pds%}
      - "{{ pd.name }}"
{% endfor %}
    restart: on-failure
{% endfor %}
{% for tidb in tidbs%}
  {{ tidb.name }}:
    image: pingcap/tidb:{{ tidb.version }}
{% if tidb.exposed %}
    ports:
      - "{{ tidb.expose_server_port }}:4000"
      - "{{ tidb.expose_status_port }}:10080"
{% else %}
    ports:
      - "4000"
      - "10080"
{% endif %}
    volumes:
      - ./config/tidb.toml:/tidb.toml:ro
      - ./logs:/logs
    command:
      - --store=tikv
      - --path={% for pd in pds %}{{ pd.name }}:2379,{% endfor %}
      - --config=/tidb.toml
      - --log-file=/logs/{{ tidb.name }}.log
    depends_on:
{% for tikv in tikvs %}
      - "{{ tikv.name}}"
{% endfor %}
    restart: on-failure
{% endfor %}

  # monitors
  pushgateway:
    image: prom/pushgateway:v0.3.1
    command:
      - --log.level=error
    restart: on-failure
  prometheus:
    user: root
    image: prom/prometheus:v2.2.1
    command:
      - --log.level=error
      - --storage.tsdb.path=/data/prometheus
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "{{ prometheus.expose_port }}:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./config/pd.rules.yml:/etc/prometheus/pd.rules.yml:ro
      - ./config/tikv.rules.yml:/etc/prometheus/tikv.rules.yml:ro
      - ./config/tidb.rules.yml:/etc/prometheus/tidb.rules.yml:ro
      - ./data:/data
    restart: on-failure
  grafana:
    image: grafana/grafana:6.0.1
    user: "0"
    environment:
      GF_LOG_LEVEL: error
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_PATHS_CONFIG: /etc/grafana/grafana.ini
    volumes:
      - ./config/grafana:/etc/grafana
      - ./config/dashboards:/tmp/dashboards
      - ./data/grafana:/var/lib/grafana
    ports:
      - "{{ grafana.expose_port }}:3000"
    restart: on-failure
