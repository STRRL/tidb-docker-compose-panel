package com.github.strrl.panel.core.render;

import com.github.strrl.panel.core.model.*;
import lombok.extern.slf4j.Slf4j;
import org.junit.Assert;
import org.junit.Test;

import java.util.Arrays;

@Slf4j
public class ClusterDockerComposeRendererTest {

  @Test
  public void render() {
    Cluster cluster = new Cluster("testCluster");
    cluster.setPds(
        Arrays.asList(new Pd("pdA", "latest"), new Pd("pdB", "latest"), new Pd("pdC", "latest")));
    cluster.setTidbs(
        Arrays.asList(
            new Tidb("tidbA", "latest", true, 4000, 10080),
            new Tidb("tidbB", "latest", true, 4001, 10081)));
    cluster.setTikvs(Arrays.asList(new Tikv("tikvA", "latest"), new Tikv("tikvB", "latest")));
    cluster.setGrafana(new Grafana(13000));
    cluster.setPrometheus(new Prometheus(19090));
    ClusterDockerComposeRenderer renderer = new ClusterDockerComposeRenderer(cluster);
    String context = renderer.render();

    String excepted =
        "version: '2.1'\n"
            + "\n"
            + "services:\n"
            + "\n"
            + "  pdA:\n"
            + "    image: pingcap/pd:latest\n"
            + "    ports:\n"
            + "      - \"2379\"\n"
            + "    volumes:\n"
            + "      - ./config/pd.toml:/pd.toml:ro\n"
            + "      - ./data:/data\n"
            + "      - ./logs:/logs\n"
            + "    command:\n"
            + "      - --name=pdA\n"
            + "      - --client-urls=http://0.0.0.0:2379\n"
            + "      - --peer-urls=http://0.0.0.0:2380\n"
            + "      - --advertise-client-urls=http://pdA:2379\n"
            + "      - --advertise-peer-urls=http://pdA:2380\n"
            + "      - --initial-cluster=pdA=http://pdA:2380,pdB=http://pdB:2380,pdC=http://pdC:2380,\n"
            + "      - --data-dir=/data/pdA\n"
            + "      - --config=/pd.toml\n"
            + "      - --log-file=/logs/pdA.log\n"
            + "    restart: on-failure\n"
            + "\n"
            + "  pdB:\n"
            + "    image: pingcap/pd:latest\n"
            + "    ports:\n"
            + "      - \"2379\"\n"
            + "    volumes:\n"
            + "      - ./config/pd.toml:/pd.toml:ro\n"
            + "      - ./data:/data\n"
            + "      - ./logs:/logs\n"
            + "    command:\n"
            + "      - --name=pdB\n"
            + "      - --client-urls=http://0.0.0.0:2379\n"
            + "      - --peer-urls=http://0.0.0.0:2380\n"
            + "      - --advertise-client-urls=http://pdB:2379\n"
            + "      - --advertise-peer-urls=http://pdB:2380\n"
            + "      - --initial-cluster=pdA=http://pdA:2380,pdB=http://pdB:2380,pdC=http://pdC:2380,\n"
            + "      - --data-dir=/data/pdB\n"
            + "      - --config=/pd.toml\n"
            + "      - --log-file=/logs/pdB.log\n"
            + "    restart: on-failure\n"
            + "\n"
            + "  pdC:\n"
            + "    image: pingcap/pd:latest\n"
            + "    ports:\n"
            + "      - \"2379\"\n"
            + "    volumes:\n"
            + "      - ./config/pd.toml:/pd.toml:ro\n"
            + "      - ./data:/data\n"
            + "      - ./logs:/logs\n"
            + "    command:\n"
            + "      - --name=pdC\n"
            + "      - --client-urls=http://0.0.0.0:2379\n"
            + "      - --peer-urls=http://0.0.0.0:2380\n"
            + "      - --advertise-client-urls=http://pdC:2379\n"
            + "      - --advertise-peer-urls=http://pdC:2380\n"
            + "      - --initial-cluster=pdA=http://pdA:2380,pdB=http://pdB:2380,pdC=http://pdC:2380,\n"
            + "      - --data-dir=/data/pdC\n"
            + "      - --config=/pd.toml\n"
            + "      - --log-file=/logs/pdC.log\n"
            + "    restart: on-failure\n"
            + "\n"
            + "\n"
            + "  tikvA:\n"
            + "    image: pingcap/tikv:latest\n"
            + "    volumes:\n"
            + "      - ./config/tikv.toml:/tikv.toml:ro\n"
            + "      - ./data:/data\n"
            + "      - ./logs:/logs\n"
            + "    command:\n"
            + "      - --addr=0.0.0.0:20160\n"
            + "      - --advertise-addr=tikvA:20160\n"
            + "      - --data-dir=/data/tikvA\n"
            + "      - --pd=pdA:2379,pdB:2379,pdC:2379,\n"
            + "      - --config=/tikv.toml\n"
            + "      - --log-file=/logs/tikvA.log\n"
            + "    depends_on:\n"
            + "\n"
            + "      - \"pdA\"\n"
            + "\n"
            + "      - \"pdB\"\n"
            + "\n"
            + "      - \"pdC\"\n"
            + "\n"
            + "    restart: on-failure\n"
            + "\n"
            + "  tikvB:\n"
            + "    image: pingcap/tikv:latest\n"
            + "    volumes:\n"
            + "      - ./config/tikv.toml:/tikv.toml:ro\n"
            + "      - ./data:/data\n"
            + "      - ./logs:/logs\n"
            + "    command:\n"
            + "      - --addr=0.0.0.0:20160\n"
            + "      - --advertise-addr=tikvB:20160\n"
            + "      - --data-dir=/data/tikvB\n"
            + "      - --pd=pdA:2379,pdB:2379,pdC:2379,\n"
            + "      - --config=/tikv.toml\n"
            + "      - --log-file=/logs/tikvB.log\n"
            + "    depends_on:\n"
            + "\n"
            + "      - \"pdA\"\n"
            + "\n"
            + "      - \"pdB\"\n"
            + "\n"
            + "      - \"pdC\"\n"
            + "\n"
            + "    restart: on-failure\n"
            + "\n"
            + "\n"
            + "  tidbA:\n"
            + "    image: pingcap/tidb:latest\n"
            + "\n"
            + "    ports:\n"
            + "      - \"4000:4000\"\n"
            + "      - \"10080:10080\"\n"
            + "\n"
            + "    volumes:\n"
            + "      - ./config/tidb.toml:/tidb.toml:ro\n"
            + "      - ./logs:/logs\n"
            + "    command:\n"
            + "      - --store=tikv\n"
            + "      - --path=pdA:2379,pdB:2379,pdC:2379,\n"
            + "      - --config=/tidb.toml\n"
            + "      - --log-file=/logs/tidbA.log\n"
            + "    depends_on:\n"
            + "\n"
            + "      - \"tikvA\"\n"
            + "\n"
            + "      - \"tikvB\"\n"
            + "\n"
            + "    restart: on-failure\n"
            + "\n"
            + "  tidbB:\n"
            + "    image: pingcap/tidb:latest\n"
            + "\n"
            + "    ports:\n"
            + "      - \"4001:4000\"\n"
            + "      - \"10081:10080\"\n"
            + "\n"
            + "    volumes:\n"
            + "      - ./config/tidb.toml:/tidb.toml:ro\n"
            + "      - ./logs:/logs\n"
            + "    command:\n"
            + "      - --store=tikv\n"
            + "      - --path=pdA:2379,pdB:2379,pdC:2379,\n"
            + "      - --config=/tidb.toml\n"
            + "      - --log-file=/logs/tidbB.log\n"
            + "    depends_on:\n"
            + "\n"
            + "      - \"tikvA\"\n"
            + "\n"
            + "      - \"tikvB\"\n"
            + "\n"
            + "    restart: on-failure\n"
            + "\n"
            + "\n"
            + "  # monitors\n"
            + "  pushgateway:\n"
            + "    image: prom/pushgateway:v0.3.1\n"
            + "    command:\n"
            + "      - --log.level=error\n"
            + "    restart: on-failure\n"
            + "  prometheus:\n"
            + "    user: root\n"
            + "    image: prom/prometheus:v2.2.1\n"
            + "    command:\n"
            + "      - --log.level=error\n"
            + "      - --storage.tsdb.path=/data/prometheus\n"
            + "      - --config.file=/etc/prometheus/prometheus.yml\n"
            + "    ports:\n"
            + "      - \"19090:9090\"\n"
            + "    volumes:\n"
            + "      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro\n"
            + "      - ./config/pd.rules.yml:/etc/prometheus/pd.rules.yml:ro\n"
            + "      - ./config/tikv.rules.yml:/etc/prometheus/tikv.rules.yml:ro\n"
            + "      - ./config/tidb.rules.yml:/etc/prometheus/tidb.rules.yml:ro\n"
            + "      - ./data:/data\n"
            + "    restart: on-failure\n"
            + "  grafana:\n"
            + "    image: grafana/grafana:6.0.1\n"
            + "    user: \"0\"\n"
            + "    environment:\n"
            + "      GF_LOG_LEVEL: error\n"
            + "      GF_PATHS_PROVISIONING: /etc/grafana/provisioning\n"
            + "      GF_PATHS_CONFIG: /etc/grafana/grafana.ini\n"
            + "    volumes:\n"
            + "      - ./config/grafana:/etc/grafana\n"
            + "      - ./config/dashboards:/tmp/dashboards\n"
            + "      - ./data/grafana:/var/lib/grafana\n"
            + "    ports:\n"
            + "      - \"13000:3000\"\n"
            + "    restart: on-failure\n";
    Assert.assertEquals(excepted, context);
  }
}
